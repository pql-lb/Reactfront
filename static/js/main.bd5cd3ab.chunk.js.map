{"version":3,"sources":["components/fbLogin.js","components/login.js","components/logout.js","App.js","reportWebVitals.js","index.js"],"names":["FbLogin","state","redirect","statusChangeCallback","response","status","console","log","Promise","res","rej","window","FB","login","props","setAccess","authResponse","accessToken","checkLoginState","getLoginStatus","d","s","id","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","fbAsyncInit","init","appId","cookie","xfbml","version","AppEvents","logPageView","this","bind","fire","then","fire2","api","length","setState","setTimeout","forceUpdate","loadFbApi","loggedIn","Fragment","to","data-onlogin","className","data-width","data-size","data-button-type","data-layout","data-auto-logout-link","data-use-continue-as","scope","React","Component","Login","email","password","submitRedirectFb","invalidLogin","errorMsg","handleChange","e","target","value","handleSubmit","obj","fetch","method","body","JSON","stringify","headers","json","data","a","error","Error","now","Date","getTime","expires","name","token","useCook","match","RegExp","useCooki","split","useCookie","formData","FormData","file1","blob","file2","img","File","type","append","catch","err","onChange","onClick","Test","history","useHistory","location","useLocation","Logout","loggedOut","logout","redirectPage","App","number","PrivateRoute","component","rest","render","pathname","from","basename","exact","path","showBtn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.bd5cd3ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass FbLogin extends React.Component {\r\n  state = {\r\n    redirect: false\r\n  }\r\n  statusChangeCallback = (response) => {\r\n    const {status} = response;\r\n    console.log(status)\r\n    return new Promise((res, rej) => {\r\n      if (status === 'not_authorized' || status === 'unknown') {\r\n        console.log('not connected')\r\n        window.FB.login((response) => {\r\n          console.log('response', response)\r\n          this.props.setAccess(response.authResponse.accessToken)\r\n          return res(response.authResponse)  \r\n        })\r\n      } else {\r\n        console.log('connect')\r\n        //Should not be showing button in this scenario - just process access token and quickly redirect\r\n        this.props.setAccess(response.authResponse.accessToken)\r\n        res(response.authResponse)\r\n      }\r\n   })\r\n  }\r\n   checkLoginState = () => {\r\n     return new Promise((res, rej) => {\r\n        window.FB.getLoginStatus(function(response) {\r\n            res(response)\r\n        });\r\n      })\r\n    }\r\n  loadFbApi() {\r\n    return new Promise((res, rej) => {\r\n      (function(d, s, id) {\r\n        var js, fjs = d.getElementsByTagName(s)[0];\r\n        if (d.getElementById(id)) return;\r\n        js = d.createElement(s); js.id = id;\r\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\r\n        fjs.parentNode.insertBefore(js, fjs);\r\n      }(document, 'script', 'facebook-jssdk'));\r\n      window.fbAsyncInit = function() {\r\n          let FB_APP_ID = 1796391010517069;\r\n          window.FB.init({\r\n              appId      : FB_APP_ID,\r\n              cookie     : true, \r\n              // the session\r\n              xfbml      : true, \r\n              version    : 'v9.0' \r\n          })\r\n          window.FB.AppEvents.logPageView();\r\n          console.log('fired')\r\n          res()\r\n        }\r\n      })\r\n    }\r\n\r\n    componentDidMount() {\r\n      console.log('mount', window.FB)\r\n      if (window.FB) {\r\n        console.log('window exists')\r\n        //Could set state to make custom button appear\r\n        //FB button likely not appearing due to window.FB?\r\n          let fire = this.checkLoginState.bind(this)\r\n          fire()\r\n          .then((response) => {\r\n            console.log('res1', response)\r\n            let fire2 = this.statusChangeCallback.bind(this)\r\n            fire2(response)\r\n            .then(res => {\r\n              console.log('res2', res, this.props.accessToken)\r\n              //TEST API CALL\r\n              new Promise((res, rej) => {\r\n                  window.FB.api('/me/accounts?fields=id', (response) => {\r\n                      console.log('res',response)\r\n                      if (response) {\r\n                        res()\r\n                      } else {\r\n                        rej()\r\n                      }\r\n                  })\r\n              })\r\n              .then(() => {\r\n                if(this.props.accessToken.length > 1) {\r\n                  console.log('here')\r\n                  this.setState({redirect: true})\r\n                  console.log('redirect', this.state.redirect)\r\n                  setTimeout(() => {this.forceUpdate()}, 1000)\r\n                }\r\n              })\r\n              \r\n            })\r\n          })\r\n      } else {\r\n        this.loadFbApi()\r\n        .then(() => {\r\n          let fire = this.checkLoginState.bind(this)\r\n          fire()\r\n          .then((response) => {\r\n            console.log('res1 second', response)\r\n            let fire2 = this.statusChangeCallback.bind(this)\r\n            fire2(response)\r\n            .then(res => {\r\n              console.log('res2 second', res, this.props.accessToken)\r\n              //TEST API CALL\r\n              new Promise((res, rej) => {\r\n                window.FB.api('/me/accounts?fields=id', (response) => {\r\n                    console.log('res',response)\r\n                    if (response) {\r\n                      res()\r\n                    } else {\r\n                      rej()\r\n                    }\r\n                })\r\n              })\r\n              .then(() => {\r\n                if(this.props.accessToken.length > 1) {\r\n                  console.log('here')\r\n                  this.setState({redirect: true})\r\n                  console.log('redirect', this.state.redirect)\r\n                  setTimeout(() => {this.forceUpdate()}, 1000)\r\n                }\r\n              })\r\n\r\n            })\r\n          })\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n      const {loggedIn} = this.props;\r\n      const {redirect} = this.state;\r\n      console.log('new', loggedIn, redirect)\r\n        return (\r\n            <React.Fragment>\r\n              {redirect === true ? <Redirect to=\"/dashboard\" /> : null}\r\n                <div id=\"fb-root\">\r\n                  {/* <div onClick={this.handleClick}>FACEBOOK */}\r\n                  <div \r\n                  data-onlogin={() => console.log('data login')}\r\n                  className=\"fb-login-button\" \r\n                  data-width=\"300\" \r\n                  data-size=\"large\" \r\n                  data-button-type=\"continue_with\" \r\n                  data-layout=\"default\" \r\n                  data-auto-logout-link=\"false\" \r\n                  data-use-continue-as=\"false\"\r\n                  scope='read_insights,instagram_basic,pages_show_list,instagram_manage_comments,instagram_manage_insights,pages_read_engagement' \r\n                  >\r\n                  </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FbLogin;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        submitRedirectFb: false,\r\n        invalidLogin: false,\r\n        errorMsg: ' ',\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = () => {\r\n        let {email, password, invalidLogin} = this.state;\r\n        if (email.length > 1 && password.length > 1) {\r\n            let obj = { 'email': email, 'password': password }\r\n            fetch(`https://multer-test123.herokuapp.com/signin`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(obj),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log('res',res)\r\n                if (res.status === 200) {\r\n                    this.setState({invalidLogin: false})\r\n                    return res.json()\r\n                } else {\r\n                    this.setState({invalidLogin: true})\r\n                    return res.json()\r\n                }\r\n            })\r\n            .then(async (data) => {\r\n                let error = data.Error;\r\n                console.log(data, this.state.invalidLogin, error)\r\n                if (this.state.invalidLogin === false && !error) {\r\n                    let name = \"token\";\r\n                    let now = new Date().getTime();\r\n                    let expires = now + (1000*60)\r\n                    //set cookie\r\n                    document.cookie = name + \"=\" + data.token + \";expires=\" + expires +\";path=/\"\r\n                    let useCook = document.cookie.match(new RegExp('(^| )' + 'token' + '=([^;]+)'));\r\n                    let useCooki = useCook[0].split('=')\r\n                    //CHANGE THE NUMBER HERE\r\n                    let useCookie = useCooki[1]\r\n                    console.log('bearer', useCookie)\r\n                    let formData = new FormData()\r\n                    \r\n                    let file1 = await fetch('https://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/Image_created_with_a_mobile_phone.png/1200px-Image_created_with_a_mobile_phone.png')\r\n                    let file2 = await file1.blob()\r\n                    let metadata = { type: 'image/jpeg' }\r\n                    let img = new File([file2], \"test.jpg\", metadata)\r\n                    formData.append('image', img)\r\n                    console.log('formData', formData, img)\r\n\r\n                    new Promise((res, rej) => {\r\n                        fetch('https://multer-test123.herokuapp.com/test', {\r\n                            method: 'POST',\r\n                            body: formData,\r\n                            headers: {\r\n                                'Authorization': `Bearer ${useCookie}`\r\n                            }\r\n                        })\r\n                        .then(async (response) => {\r\n                            console.log('here',response)\r\n                            if (response.status === 200) {\r\n                                res()\r\n                            } else {\r\n                                if (response.status === 403) {\r\n                                    data = await response.json()\r\n                                    this.setState({errorMsg: data.Error})\r\n                                }\r\n                                rej()\r\n                            }\r\n                        })\r\n                        .catch(err => console.log(err))\r\n                    })\r\n                    .then(() => {\r\n                        setTimeout(() => {\r\n                            this.setState({submitRedirectFb: true})\r\n                        }, 1000)\r\n                    })\r\n                    .catch(err => console.log(err))\r\n                } else {\r\n                    //set error message\r\n                    //delete cookie\r\n                    console.log('error')\r\n                    this.setState({errorMsg: data.Error})\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({errorMsg: 'Please ensure both fields are entered correctly.'})\r\n        }\r\n    }\r\n    render() {\r\n        const {email, password, submitRedirectFb, invalidLogin, errorMsg} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                {submitRedirectFb === true && invalidLogin === false ? <Redirect to=\"/fb\" /> : null}\r\n                <h1>Sign In</h1>\r\n                <span className=\"alert\">{errorMsg}</span>\r\n                <label>Email:</label>\r\n                <input \r\n                id=\"email\"\r\n                value={email} \r\n                onChange={(e) => this.handleChange(e)}\r\n                className=\"input\" />\r\n                <label>Password:</label>\r\n                <input \r\n                id=\"password\"\r\n                value={password} \r\n                onChange={(e) => this.handleChange(e)}\r\n                className=\"input\" />\r\n                <div className=\"btnContain\">\r\n                    <button \r\n                    onClick={this.handleSubmit}\r\n                    className=\"btn login\"\r\n                    >\r\n                        <div className=\"lds-defaultTwo\">\r\n                        <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                        </div>\r\n                        <span className=\"loginTxt\">LOGIN</span>\r\n                    </button>\r\n                    <button className=\"btn signup\">\r\n                        <span className=\"signTxt\"> SIGNUP </span>\r\n                    </button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\n\r\nfunction Test() {\r\n    let history = useHistory()\r\n    let location = useLocation()\r\n    console.log(history, location)\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\nclass Logout extends React.Component {\r\n    state = {\r\n        loggedOut: false\r\n    }\r\n    logout = () => {\r\n        window.FB.logout(res => {console.log('loggedout', res)})\r\n        this.props.redirectPage(false)\r\n        setTimeout(() => {\r\n            this.setState({loggedOut: true})\r\n        }, 2000)\r\n    }\r\n    render() {\r\n      const {loggedOut} = this.state;\r\n      const {accessToken} = this.props;\r\n      console.log('at new', this.props)\r\n        return (\r\n            <React.Fragment>\r\n              {/* {loggedOut === true ? <Redirect to=\"/\" /> : null} */}\r\n                <button\r\n                onClick={this.logout}\r\n                >Logout</button>\r\n                <Test />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logout;","import './App.css';\nimport './components/login.css';\nimport React from 'react';\nimport {Button} from 'reactstrap';\nimport {HashRouter as Router, Switch, Route, Link, Redirect} from 'react-router-dom';\nimport FbLogin from './components/fbLogin';\nimport Login from './components/login';\nimport Logout from './components/logout';\n\nclass App extends React.Component {\n  state = {\n    loggedIn: false,\n    accessToken: '',\n  }\n  redirectPage = (value) => {\n    this.setState({\n      loggedIn: value\n    })\n  }\n  setAccess = (number) => {\n    this.setState({\n      accessToken: number\n    })\n  }\n  render() {\n    const {loggedIn, accessToken} = this.state;\n    const PrivateRoute = ({component: Component, ...rest}) => (\n      <Route {...rest} render={(props) => {\n        //This will need to be document.cookie - accesstoken\n        if (accessToken.length > 2) {\n          return <Component {...props} />\n        } else {\n          return <Redirect to={{pathname: '/', state: {from: props.location} }} />\n        }\n      }}/>  \n    )\n      return (\n        <Router basename='/'>\n          <Switch>\n                <Route exact path=\"/\">\n                  \n                    <div className=\"form\">\n                    <div className=\"rowMine\">\n                      <Login showBtn={this.showBtn} />\n                    </div>\n                    </div>\n                  \n                </Route>       \n                <Route path=\"/fb\">\n               \n                    <div className=\"form\">\n                    <div className=\"rowMine\">\n                      <FbLogin loggedIn={loggedIn} redirectPage={this.redirectPage} setAccess={this.setAccess} accessToken={accessToken} />\n                    </div>\n                    </div>\n                  \n                </Route>\n                \n                <PrivateRoute component={Logout} path='/dashboard' redirectPage={this.redirectPage} accessToken={accessToken} />\n          </Switch>\n        </Router>\n      )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}