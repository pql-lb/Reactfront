{"version":3,"sources":["components/fbLogin.js","components/login.js","components/logout.js","App.js","reportWebVitals.js","index.js"],"names":["FbLogin","state","redirect","statusChangeCallback","response","status","console","log","Promise","res","rej","window","FB","login","props","setAccess","authResponse","accessToken","checkLoginState","getLoginStatus","d","s","id","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","fbAsyncInit","init","appId","cookie","xfbml","version","AppEvents","logPageView","this","bind","fire","then","fire2","length","setState","setTimeout","forceUpdate","loadFbApi","loggedIn","Fragment","to","data-onlogin","className","data-width","data-size","data-button-type","data-layout","data-auto-logout-link","data-use-continue-as","scope","React","Component","Login","email","password","submitRedirectFb","handleChange","e","target","value","handleSubmit","obj","fetch","method","body","JSON","stringify","headers","onChange","onClick","Test","history","useHistory","location","useLocation","Logout","loggedOut","logout","redirectPage","App","number","PrivateRoute","component","rest","render","pathname","from","basename","exact","path","showBtn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.824e0b08.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass FbLogin extends React.Component {\r\n  state = {\r\n    redirect: false\r\n  }\r\n  statusChangeCallback = (response) => {\r\n    const {status} = response;\r\n    console.log(status)\r\n    return new Promise((res, rej) => {\r\n      if (status === 'not_authorized' || status === 'unknown') {\r\n        window.FB.login((response) => {\r\n          this.props.setAccess(response.authResponse.accessToken)\r\n          res(response.authResponse)  \r\n        })\r\n      } else {\r\n        //Should not be showing button in this scenario - just process access token and quickly redirect\r\n        this.props.setAccess(response.authResponse.accessToken)\r\n        res(response.authResponse)\r\n      }\r\n   })\r\n  }\r\n   checkLoginState = () => {\r\n     return new Promise((res, rej) => {\r\n        window.FB.getLoginStatus(function(response) {\r\n\r\n            res(response)\r\n        });\r\n      })\r\n    }\r\n  loadFbApi() {\r\n    return new Promise((res, rej) => {\r\n      (function(d, s, id) {\r\n        var js, fjs = d.getElementsByTagName(s)[0];\r\n        if (d.getElementById(id)) return;\r\n        js = d.createElement(s); js.id = id;\r\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\r\n        fjs.parentNode.insertBefore(js, fjs);\r\n      }(document, 'script', 'facebook-jssdk'));\r\n      window.fbAsyncInit = function() {\r\n          let FB_APP_ID = 1796391010517069;\r\n          window.FB.init({\r\n              appId      : FB_APP_ID,\r\n              cookie     : true, \r\n              // the session\r\n              xfbml      : true, \r\n              version    : 'v9.0' \r\n          })\r\n          window.FB.AppEvents.logPageView();\r\n          console.log('fired')\r\n          res()\r\n        }\r\n      })\r\n    }\r\n\r\n    componentDidMount() {\r\n      console.log('mount', window.FB)\r\n      if (window.FB) {\r\n        console.log('window exists')\r\n        //Could set state to make custom button appear\r\n        //FB button likely not appearing due to window.FB?\r\n          let fire = this.checkLoginState.bind(this)\r\n          fire()\r\n          .then((response) => {\r\n            console.log('res1', response)\r\n            let fire2 = this.statusChangeCallback.bind(this)\r\n            fire2(response)\r\n            .then(res => {\r\n              console.log('res2', res, this.props.accessToken)\r\n              if(this.props.accessToken.length > 1) {\r\n                console.log('here')\r\n                this.setState({redirect: true})\r\n                console.log('redirect', this.state.redirect)\r\n                setTimeout(() => {this.forceUpdate()}, 1000)\r\n              }\r\n            })\r\n          })\r\n      } else {\r\n        this.loadFbApi()\r\n        .then(() => {\r\n          let fire = this.checkLoginState.bind(this)\r\n          fire()\r\n          .then((response) => {\r\n            console.log('res1', response)\r\n            let fire2 = this.statusChangeCallback.bind(this)\r\n            fire2(response)\r\n            .then(res => {\r\n              console.log('res2', res, this.props.accessToken)\r\n              if(this.props.accessToken.length > 1) {\r\n                console.log('here')\r\n                this.setState({redirect: true})\r\n                console.log('redirect', this.state.redirect)\r\n                setTimeout(() => {this.forceUpdate()}, 1000)\r\n              }\r\n            })\r\n          })\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n      const {loggedIn} = this.props;\r\n      const {redirect} = this.state;\r\n      console.log('logged in', loggedIn, redirect)\r\n        return (\r\n            <React.Fragment>\r\n              {redirect === true ? <Redirect to=\"/dashboard\" /> : null}\r\n                <div id=\"fb-root\">\r\n                  {/* <div onClick={this.handleClick}>FACEBOOK */}\r\n                  <div \r\n                  data-onlogin={() => console.log('data login')}\r\n                  className=\"fb-login-button\" \r\n                  data-width=\"300\" \r\n                  data-size=\"large\" \r\n                  data-button-type=\"continue_with\" \r\n                  data-layout=\"default\" \r\n                  data-auto-logout-link=\"false\" \r\n                  data-use-continue-as=\"false\"\r\n                  scope='read_insights,instagram_basic,pages_show_list,instagram_manage_comments,instagram_manage_insights,pages_read_engagement' \r\n                  >\r\n                  </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FbLogin;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        submitRedirectFb: false\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = () => {\r\n        let {email, password} = this.state;\r\n        if (email.length > 2 && password.length > 2) {\r\n            let obj = { 'email': email, 'password': password }\r\n            fetch(`https://multer-test123.herokuapp.com/signin`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(obj),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(res => console.log(res))\r\n            \r\n            //this.setState({submitRedirectFb: true})\r\n        }\r\n    }\r\n    render() {\r\n        const {email, password, submitRedirectFb} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                {submitRedirectFb === true ? <Redirect to=\"/fb\" /> : null}\r\n                <h1>Sign In</h1>\r\n                <span className=\"alert\"></span>\r\n                <label>Email:</label>\r\n                <input \r\n                id=\"email\"\r\n                value={email} \r\n                onChange={(e) => this.handleChange(e)}\r\n                className=\"input\" />\r\n                <label>Password:</label>\r\n                <input \r\n                id=\"password\"\r\n                value={password} \r\n                onChange={(e) => this.handleChange(e)}\r\n                className=\"input\" />\r\n                <div className=\"btnContain\">\r\n                    <button \r\n                    onClick={this.handleSubmit}\r\n                    className=\"btn login\"\r\n                    >\r\n                        <div className=\"lds-defaultTwo\">\r\n                        <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                        </div>\r\n                        <span className=\"loginTxt\">LOGIN</span>\r\n                    </button>\r\n                    <button className=\"btn signup\">\r\n                        <span className=\"signTxt\"> SIGNUP </span>\r\n                    </button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\n\r\nfunction Test() {\r\n    let history = useHistory()\r\n    let location = useLocation()\r\n    console.log(history, location)\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\nclass Logout extends React.Component {\r\n    state = {\r\n        loggedOut: false\r\n    }\r\n    logout = () => {\r\n        window.FB.logout(res => {console.log('loggedout', res)})\r\n        this.props.redirectPage(false)\r\n        setTimeout(() => {\r\n            this.setState({loggedOut: true})\r\n        }, 2000)\r\n    }\r\n    render() {\r\n      const {loggedOut} = this.state;\r\n      const {accessToken} = this.props;\r\n      console.log('at new', this.props)\r\n        return (\r\n            <React.Fragment>\r\n              {/* {loggedOut === true ? <Redirect to=\"/\" /> : null} */}\r\n                <button\r\n                onClick={this.logout}\r\n                >Logout</button>\r\n                <Test />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logout;","import './App.css';\nimport './components/login.css';\nimport React from 'react';\nimport {Button} from 'reactstrap';\nimport {HashRouter as Router, Switch, Route, Link, Redirect} from 'react-router-dom';\nimport FbLogin from './components/fbLogin';\nimport Login from './components/login';\nimport Logout from './components/logout';\n\nclass App extends React.Component {\n  state = {\n    loggedIn: false,\n    accessToken: '',\n  }\n  redirectPage = (value) => {\n    this.setState({\n      loggedIn: value\n    })\n  }\n  setAccess = (number) => {\n    this.setState({\n      accessToken: number\n    })\n  }\n  render() {\n    const {loggedIn, accessToken} = this.state;\n    const PrivateRoute = ({component: Component, ...rest}) => (\n      <Route {...rest} render={(props) => {\n        //This will need to be document.cookie - accesstoken\n        if (accessToken.length > 2) {\n          return <Component {...props} />\n        } else {\n          return <Redirect to={{pathname: '/', state: {from: props.location} }} />\n        }\n      }}/>  \n    )\n      return (\n        <Router basename='/'>\n          <Switch>\n                <Route exact path=\"/\">\n                  \n                    <div className=\"form\">\n                    <div className=\"rowMine\">\n                      <Login showBtn={this.showBtn} />\n                    </div>\n                    </div>\n                  \n                </Route>       \n                <Route path=\"/fb\">\n               \n                    <div className=\"form\">\n                    <div className=\"rowMine\">\n                      <FbLogin loggedIn={loggedIn} redirectPage={this.redirectPage} setAccess={this.setAccess} accessToken={accessToken} />\n                    </div>\n                    </div>\n                  \n                </Route>\n                \n                <PrivateRoute component={Logout} path='/dashboard' redirectPage={this.redirectPage} accessToken={accessToken} />\n          </Switch>\n        </Router>\n      )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}