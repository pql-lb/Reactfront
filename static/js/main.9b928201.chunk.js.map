{"version":3,"sources":["components/fbLogin.js","components/login.js","components/logout.js","App.js","reportWebVitals.js","index.js"],"names":["FbLogin","state","redirect","checkLoginState","Promise","res","rej","window","FB","getLoginStatus","response","login","resolve2","console","log","authResponse","accessToken","access","statusChange","resolve","a","status","then","props","redirectPageLogout","setAccess","d","s","id","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","fbAsyncInit","init","appId","cookie","xfbml","version","AppEvents","logPageView","this","loadFbApi","bind","fire","fire2","resp","api","access_token","length","setState","setTimeout","forceUpdate","catch","err","loggedIn","Fragment","to","data-onlogin","className","data-width","data-size","data-button-type","data-layout","data-auto-logout-link","data-use-continue-as","scope","React","Component","Login","email","password","submitRedirectFb","invalidLogin","errorMsg","handleChange","e","target","value","handleSubmit","obj","fetch","method","body","JSON","stringify","headers","json","data","error","Error","now","Date","getTime","expires","name","token","useCook","match","RegExp","useCooki","split","useCookie","formData","FormData","file1","blob","file2","img","File","type","append","onChange","onClick","Logout","loggedOut","logout","redirectPage","App","number","PrivateRoute","component","rest","render","pathname","from","location","basename","exact","path","showBtn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.9b928201.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass FbLogin extends React.Component {\r\n  state = {\r\n    redirect: false\r\n  }\r\n\r\n   checkLoginState = () => {\r\n     return new Promise((res, rej) => {\r\n        window.FB.getLoginStatus(function(response) {\r\n            res(response)\r\n        });\r\n      })\r\n    }\r\n  loadFbApi() {\r\n    return new Promise((res, rej) => {\r\n      if (!window.FB) { \r\n          (function(d, s, id) {\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) return;\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = \"//connect.facebook.net/en_US/sdk.js\";\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n          }(document, 'script', 'facebook-jssdk'));\r\n          window.fbAsyncInit = function() {\r\n              let FB_APP_ID = 1796391010517069;\r\n              window.FB.init({\r\n                  appId      : FB_APP_ID,\r\n                  cookie     : true, \r\n                  // the session\r\n                  xfbml      : true, \r\n                  version    : 'v9.0' \r\n              })\r\n              window.FB.AppEvents.logPageView();\r\n              console.log('fired')\r\n              res()\r\n        } \r\n      } else {\r\n          res()\r\n      }\r\n      })\r\n    }\r\n    login = () => {\r\n      return new Promise((resolve2, rej) => {\r\n        window.FB.login(function(res) {\r\n          console.log('logged in', res.authResponse.accessToken)\r\n          let access = res.authResponse.accessToken;\r\n          resolve2(access)\r\n        })\r\n      })\r\n    }\r\n    statusChange = (response) => {\r\n      return new Promise(async (resolve, rej) => {\r\n        if (response.status === 'unknown'||response.status === 'not_authorized') {  \r\n            this.login()\r\n            .then(access => {\r\n              this.props.redirectPageLogout(false)\r\n              this.props.setAccess(access)\r\n              resolve(access)\r\n            })\r\n        } else {\r\n            this.props.redirectPageLogout(false)\r\n            this.props.setAccess(response.authResponse.accessToken)\r\n            resolve(response.authResponse.accessToken)\r\n        }            \r\n      })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFbApi()\r\n        .then(() => {\r\n          let fire = this.checkLoginState.bind(this)\r\n          fire()\r\n          .then(async (response) => {\r\n            let fire2 = this.statusChange.bind(this)\r\n            fire2(response)\r\n            .then(access => {\r\n            console.log('a',access)\r\n            if (access) {\r\n              new Promise((res, rej) => {\r\n                window.FB.getLoginStatus(resp => {\r\n                  console.log(resp)\r\n                    window.FB.api('/me/accounts?fields=id', {access_token: resp.authResponse.accessToken}, (response) => {\r\n                        console.log('RESPONSE',response)\r\n                        if (response) {\r\n                          res()\r\n                        } else {\r\n                          rej()\r\n                        }\r\n                    })\r\n                })\r\n              })\r\n              .then(() => {\r\n                if(this.props.accessToken.length > 1) {\r\n                  console.log('here')\r\n                  this.setState({redirect: true})\r\n                  console.log('redirect', this.state.redirect)\r\n                  setTimeout(() => {this.forceUpdate()}, 1000)\r\n                }\r\n              })\r\n              .catch(err => console.log(err))\r\n            }\r\n          })\r\n          })\r\n      })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n      const {loggedIn} = this.props;\r\n      const {redirect} = this.state;\r\n      console.log('new', loggedIn, redirect)\r\n        return (\r\n            <React.Fragment>\r\n              {redirect === true ? <Redirect to=\"/dashboard\" /> : null}\r\n                <div id=\"fb-root\">\r\n                  {/* <div onClick={this.handleClick}>FACEBOOK */}\r\n                  <div \r\n                  data-onlogin={() => console.log('data login')}\r\n                  className=\"fb-login-button\" \r\n                  data-width=\"300\" \r\n                  data-size=\"large\" \r\n                  data-button-type=\"continue_with\" \r\n                  data-layout=\"default\" \r\n                  data-auto-logout-link=\"false\" \r\n                  data-use-continue-as=\"false\"\r\n                  scope='read_insights,instagram_basic,pages_show_list,instagram_manage_comments,instagram_manage_insights,pages_read_engagement' \r\n                  >\r\n                  </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FbLogin;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        submitRedirectFb: false,\r\n        invalidLogin: false,\r\n        errorMsg: ' ',\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = () => {\r\n        let {email, password, invalidLogin} = this.state;\r\n        if (email.length > 1 && password.length > 1) {\r\n            let obj = { 'email': email, 'password': password }\r\n            fetch(`https://multer-test123.herokuapp.com/signin`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(obj),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log('res',res)\r\n                if (res.status === 200) {\r\n                    this.setState({invalidLogin: false})\r\n                    return res.json()\r\n                } else {\r\n                    this.setState({invalidLogin: true})\r\n                    return res.json()\r\n                }\r\n            })\r\n            .then(async (data) => {\r\n                let error = data.Error;\r\n                console.log(data, this.state.invalidLogin, error)\r\n                if (this.state.invalidLogin === false && !error) {\r\n                    let name = \"token\";\r\n                    let now = new Date().getTime();\r\n                    let expires = now + (1000*60)\r\n                    //set cookie\r\n                    document.cookie = name + \"=\" + data.token + \";expires=\" + expires +\";path=/\"\r\n                    let useCook = document.cookie.match(new RegExp('(^| )' + 'token' + '=([^;]+)'));\r\n                    let useCooki = useCook[0].split('=')\r\n                    //CHANGE THE NUMBER HERE\r\n                    let useCookie = useCooki[1]\r\n                    console.log('bearer', useCookie)\r\n                    let formData = new FormData()\r\n                    \r\n                    let file1 = await fetch('https://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/Image_created_with_a_mobile_phone.png/1200px-Image_created_with_a_mobile_phone.png')\r\n                    let file2 = await file1.blob()\r\n                    let metadata = { type: 'image/jpeg' }\r\n                    let img = new File([file2], \"test.jpg\", metadata)\r\n                    formData.append('image', img)\r\n                    console.log('formData', formData, img)\r\n\r\n                    new Promise((res, rej) => {\r\n                        fetch('https://multer-test123.herokuapp.com/test', {\r\n                            method: 'POST',\r\n                            body: formData,\r\n                            headers: {\r\n                                'Authorization': `Bearer ${useCookie}`\r\n                            }\r\n                        })\r\n                        .then(async (response) => {\r\n                            console.log('here',response)\r\n                            if (response.status === 200) {\r\n                                res()\r\n                            } else {\r\n                                if (response.status === 403) {\r\n                                    data = await response.json()\r\n                                    this.setState({errorMsg: data.Error})\r\n                                }\r\n                                rej()\r\n                            }\r\n                        })\r\n                        .catch(err => console.log(err))\r\n                    })\r\n                    .then(() => {\r\n                        setTimeout(() => {\r\n                            this.setState({submitRedirectFb: true})\r\n                        }, 1000)\r\n                    })\r\n                    .catch(err => console.log(err))\r\n                } else {\r\n                    //set error message\r\n                    //delete cookie\r\n                    console.log('error')\r\n                    this.setState({errorMsg: data.Error})\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({errorMsg: 'Please ensure both fields are entered correctly.'})\r\n        }\r\n    }\r\n    render() {\r\n        const {email, password, submitRedirectFb, invalidLogin, errorMsg} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                {submitRedirectFb === true && invalidLogin === false ? <Redirect to=\"/fb\" /> : null}\r\n                <h1>Sign In</h1>\r\n                <span className=\"alert\">{errorMsg}</span>\r\n                <label>Email:</label>\r\n                <input \r\n                id=\"email\"\r\n                value={email} \r\n                onChange={(e) => this.handleChange(e)}\r\n                className=\"input\" />\r\n                <label>Password:</label>\r\n                <input \r\n                id=\"password\"\r\n                value={password} \r\n                onChange={(e) => this.handleChange(e)}\r\n                className=\"input\" />\r\n                <div className=\"btnContain\">\r\n                    <button \r\n                    onClick={this.handleSubmit}\r\n                    className=\"btn login\"\r\n                    >\r\n                        <div className=\"lds-defaultTwo\">\r\n                        <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                        </div>\r\n                        <span className=\"loginTxt\">LOGIN</span>\r\n                    </button>\r\n                    <button className=\"btn signup\">\r\n                        <span className=\"signTxt\"> SIGNUP </span>\r\n                    </button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\n\r\nfunction Test() {\r\n    let history = useHistory()\r\n    let location = useLocation()\r\n    console.log(history, location)\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\nclass Logout extends React.Component {\r\n    state = {\r\n        loggedOut: false\r\n    }\r\n    logout = () => {\r\n        window.FB.logout(res => {console.log('loggedout', res)})\r\n        //DESTROY COOKIE\r\n        this.props.redirectPage(false)\r\n        setTimeout(() => {\r\n            this.props.redirectPageLogout(true)\r\n        }, 2000)\r\n    }\r\n    render() {\r\n    //   const {loggedOut} = this.state;\r\n      const {accessToken, loggedOut} = this.props;\r\n      console.log('at new', this.props, this.state)\r\n        return (\r\n            <React.Fragment>\r\n              {loggedOut === true ? <Redirect to=\"/\" /> : null}\r\n                <button\r\n                onClick={this.logout}\r\n                >Logout</button>\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logout;","import './App.css';\nimport './components/login.css';\nimport React from 'react';\nimport {Button} from 'reactstrap';\nimport {HashRouter as Router, Switch, Route, Link, Redirect} from 'react-router-dom';\nimport FbLogin from './components/fbLogin';\nimport Login from './components/login';\nimport Logout from './components/logout';\n\nclass App extends React.Component {\n  state = {\n    loggedIn: false,\n    accessToken: '',\n    loggedOut: false\n  }\n  redirectPage = (value) => {\n    this.setState({\n      loggedIn: value\n    })\n  }\n  redirectPageLogout = (value) => {\n    this.setState({\n      loggedOut: value\n    })\n  }\n  setAccess = (number) => {\n    this.setState({\n      accessToken: number\n    })\n  }\n  render() {\n    const {loggedIn, loggedOut, accessToken} = this.state;\n    const PrivateRoute = ({component: Component, ...rest}) => (\n      <Route {...rest} render={(props) => {\n        //This will need to be document.cookie - accesstoken\n        if (accessToken.length > 2) {\n          return <Component {...props} {...rest} />\n        } else {\n          return <Redirect to={{pathname: '/', state: {from: props.location} }} />\n        }\n      }}/>  \n    )\n      return (\n        // IF NAVIGATE TO PAGE NOT LOGGED IN - ALWAYS REDIRECT TO LOGIN THEN DASHBOARD\n        <Router basename='/'>\n          <Switch>\n                <Route exact path=\"/\">\n                  \n                    <div className=\"form\">\n                    <div className=\"rowMine\">\n                      <Login showBtn={this.showBtn} />\n                    </div>\n                    </div>\n                  \n                </Route>       \n                <Route path=\"/fb\">\n                    {/* FB NEEDS TO  BE PROTECTED SO CANT ACCESS WITHOUT COOKIE */}\n                    <div className=\"form\">\n                    <div className=\"rowMine\">\n                      <FbLogin loggedIn={loggedIn} redirectPage={this.redirectPage} redirectPageLogout={this.redirectPageLogout} setAccess={this.setAccess} accessToken={accessToken} />\n                    </div>\n                    </div>\n                  \n                </Route>\n                {/* MAKE SO CANT ACCESS WITH COOKIE AND WINDOW FB */}\n                <PrivateRoute component={Logout} path='/dashboard' loggedOut={loggedOut} redirectPageLogout={this.redirectPageLogout} redirectPage={this.redirectPage} accessToken={accessToken} />\n          </Switch>\n        </Router>\n      )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}