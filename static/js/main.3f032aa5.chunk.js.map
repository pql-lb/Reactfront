{"version":3,"sources":["components/fbLogin.js","components/login.js","components/logout.js","App.js","reportWebVitals.js","index.js"],"names":["FbLogin","state","fireLogin","console","log","window","FB","login","response","auth","authResponse","accessToken","props","setAccess","setTimeout","setState","redirect","statusChangeCallback","status","checkLoginState","getLoginStatus","this","Promise","res","rej","d","s","id","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","fbAsyncInit","init","appId","cookie","xfbml","version","AppEvents","logPageView","loadFbApi","then","loggedIn","Fragment","to","data-onlogin","className","data-width","data-size","data-button-type","data-layout","data-auto-logout-link","data-use-continue-as","scope","React","Component","Login","email","password","submitRedirectFb","handleChange","e","target","value","handleSubmit","length","onChange","onClick","Logout","loggedOut","logout","redirectPage","App","number","basename","exact","path","showBtn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3f032aa5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass FbLogin extends React.Component {\r\n  state = {}\r\n  fireLogin = () => {\r\n    console.log('firelogin')\r\n    window.FB.login((response) => {\r\n      let auth = response.authResponse;\r\n      if (auth) {\r\n        let accessToken = auth.accessToken;\r\n        this.props.setAccess(accessToken);\r\n        setTimeout(() => {\r\n          this.setState({\r\n            redirect: true\r\n          })\r\n        }, 2000)\r\n      }\r\n    })\r\n  }\r\n  statusChangeCallback = (response) => {\r\n    console.log('statuschange', response)\r\n    const {status} = response\r\n    if (status === 'not_authorized' || status === 'unknown') {\r\n      this.fireLogin(response)\r\n    } else {\r\n        // this.props.redirectPage(true)\r\n        this.setState({\r\n          redirect: true\r\n        })\r\n   }}\r\n   checkLoginState = () => {\r\n      window.FB.getLoginStatus(function(response) {\r\n          this.statusChangeCallback(response);\r\n      });\r\n    }\r\n  loadFbApi() {\r\n    return new Promise((res, rej) => {\r\n      (function(d, s, id) {\r\n        var js, fjs = d.getElementsByTagName(s)[0];\r\n        if (d.getElementById(id)) return;\r\n        js = d.createElement(s); js.id = id;\r\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\r\n        fjs.parentNode.insertBefore(js, fjs);\r\n      }(document, 'script', 'facebook-jssdk'));\r\n\r\n      window.fbAsyncInit = function() {\r\n          let FB_APP_ID = 1796391010517069;\r\n          window.FB.init({\r\n              appId      : FB_APP_ID,\r\n              cookie     : true, \r\n              // the session\r\n              xfbml      : true, \r\n              version    : 'v9.0' \r\n          })\r\n          window.FB.AppEvents.logPageView();\r\n          res()\r\n        }\r\n      })\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.loadFbApi()\r\n      .then(() => {\r\n        console.log('mount')\r\n        this.checkLoginState()\r\n      })\r\n    }\r\n    componentDidUpdate() {\r\n      console.log('update')\r\n    }\r\n\r\n\r\n    render() {\r\n      const {loggedIn} = this.props;\r\n      const {redirect} = this.state;\r\n      console.log('logged in', loggedIn)\r\n        return (\r\n            <React.Fragment>\r\n              {redirect === true ? <Redirect to=\"/dashboard\" /> : null}\r\n                <div id=\"fb-root\">\r\n                  {/* <div onClick={this.handleClick}>FACEBOOK */}\r\n                  <div \r\n                  data-onlogin={() => console.log('data login')}\r\n                  className=\"fb-login-button\" \r\n                  data-width=\"300\" \r\n                  data-size=\"large\" \r\n                  data-button-type=\"continue_with\" \r\n                  data-layout=\"default\" \r\n                  data-auto-logout-link=\"true\" \r\n                  data-use-continue-as=\"false\"\r\n                  scope='read_insights,instagram_basic,pages_show_list,instagram_manage_comments,instagram_manage_insights,pages_read_engagement' \r\n                  >\r\n                  </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FbLogin;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        submitRedirectFb: false\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = () => {\r\n        if (this.state.email.length > 2 && this.state.password.length > 2) {\r\n            this.setState({submitRedirectFb: true})\r\n        }\r\n    }\r\n    render() {\r\n        const {email, password, submitRedirectFb} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                {submitRedirectFb === true ? <Redirect to=\"/fb\" /> : null}\r\n                <h1>Sign In</h1>\r\n                <span className=\"alert\"></span>\r\n                <label>Email:</label>\r\n                <input \r\n                id=\"email\"\r\n                value={email} \r\n                onChange={(e) => this.handleChange(e)}\r\n                className=\"input\" />\r\n                <label>Password:</label>\r\n                <input \r\n                id=\"password\"\r\n                value={password} \r\n                onChange={(e) => this.handleChange(e)}\r\n                className=\"input\" />\r\n                <div className=\"btnContain\">\r\n                    <button \r\n                    onClick={this.handleSubmit}\r\n                    className=\"btn login\"\r\n                    >\r\n                        <div className=\"lds-defaultTwo\">\r\n                        <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                        </div>\r\n                        <span className=\"loginTxt\">LOGIN</span>\r\n                    </button>\r\n                    <button className=\"btn signup\">\r\n                        <span className=\"signTxt\"> SIGNUP </span>\r\n                    </button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Logout extends React.Component {\r\n    state = {\r\n        loggedOut: false\r\n    }\r\n    logout = () => {\r\n        window.FB.logout(res => {console.log('loggedout', res)})\r\n        this.props.redirectPage(false)\r\n        setTimeout(() => {\r\n            this.setState({loggedOut: true})\r\n        }, 2000)\r\n    }\r\n    render() {\r\n      const {loggedOut} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n              {loggedOut === true ? <Redirect to=\"/\" /> : null}\r\n                <button\r\n                onClick={this.logout}\r\n                >Logout</button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logout;","import './App.css';\nimport './components/login.css';\nimport React from 'react';\nimport {Button} from 'reactstrap';\nimport {HashRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport FbLogin from './components/fbLogin';\nimport Login from './components/login';\nimport Logout from './components/logout';\n\nclass App extends React.Component {\n  state = {\n    loggedIn: false,\n    accessToken: '',\n    loggedIn: false,\n  }\n  redirectPage = (value) => {\n    this.setState({\n      loggedIn: value\n    })\n  }\n  setAccess = (number) => {\n    this.setState({\n      accessToken: number\n    })\n  }\n  render() {\n    const {loggedIn} = this.state;\n\n      return (\n        <Router basename='/'>\n          <Switch>\n                <Route exact path=\"/\">\n                  \n                    <div className=\"form\">\n                    <div className=\"rowMine\">\n                      <Login showBtn={this.showBtn} />\n                    </div>\n                    </div>\n                  \n                </Route>       \n                <Route path=\"/fb\">\n               \n                    <div className=\"form\">\n                    <div className=\"rowMine\">\n                      <FbLogin loggedIn={loggedIn} redirectPage={this.redirectPage} setAccess={this.setAccess}  />\n                    </div>\n                    </div>\n                  \n                </Route>\n                <Route path=\"/dashboard\">\n                  <React.Fragment>\n                    <Logout redirectPage={this.redirectPage} />\n                  </React.Fragment>\n                </Route>\n          </Switch>\n        </Router>\n      )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}